---
- name: Install dependencies for Ruby
  apt:
    name:
      - build-essential
      - libssl-dev
      - libreadline-dev
      - zlib1g-dev
      - libyaml-dev
      - libxml2-dev
      - libxslt1-dev
      - libcurl4-openssl-dev
      - libffi-dev
      - dirmngr
      - gnupg
      - autoconf
      - bison
      - libreadline6-dev
      - libncurses5-dev
      - libgdbm6 # for ubuntu > 20.04
      - libgdbm-dev
      - libpq-dev # postgresql client
      - libjemalloc-dev # jemalloc
    state: present
  when: ansible_os_family == "Debian"

- name: Install rbenv
  become: yes
  become_user: "{{ deploy_user }}"
  git:
    repo: "https://github.com/rbenv/rbenv.git"
    dest: "{{ rbenv_root_path }}"
    depth: 1
    accept_hostkey: yes
    clone: yes
    update: yes

- name: Install ruby-build
  become: yes
  become_user: "{{ deploy_user }}"
  git:
    repo: "https://github.com/rbenv/ruby-build.git"
    dest: "{{ rbenv_root_path }}/plugins/ruby-build"
    depth: 1

- name: Install rbenv-vars
  become: yes
  become_user: "{{ deploy_user }}"
  git:
    repo: "https://github.com/rbenv/rbenv-vars.git"
    dest: "{{ rbenv_root_path }}/plugins/rbenv-vars"
    depth: 1

- name: Ensure {{ rbenv_shell_rc_path }} exists
  become: yes
  become_user: "{{ deploy_user }}"
  file:
    path: "{{ rbenv_shell_rc_path }}"
    state: touch

- name: Export RBENV_ROOT in {{ rbenv_shell_rc_path }}
  become: yes
  become_user: "{{ deploy_user }}"
  lineinfile:
    dest: "{{ rbenv_shell_rc_path }}"
    regexp: "^export RBENV_ROOT="
    line: "export RBENV_ROOT={{ rbenv_root_path }}"

- name: Put rbenv in users PATH in {{ rbenv_shell_rc_path }}
  become: yes
  become_user: "{{ deploy_user }}"
  lineinfile:
    dest: "{{ rbenv_shell_rc_path }}"
    regexp: "^PATH=\\$PATH:\\$RBENV_ROOT/bin"
    line: "PATH=$RBENV_ROOT/bin:$PATH"

- name: Put $RBENV_ROOT/shims in users $PATH in {{ rbenv_shell_rc_path }}
  become: yes
  become_user: "{{ deploy_user }}"
  lineinfile:
    dest: "{{ rbenv_shell_rc_path }}"
    regexp: "^PATH=\\$RBENV_ROOT/shims:\\$PATH"
    line: "PATH=$RBENV_ROOT/shims:$PATH"

- name: Install Rubies
  become: yes
  become_user: "{{ deploy_user }}"
  shell: "{{ rbenv_ruby_configure_opts | default('') }} {{ rbenv_bin }} install {{ item }}"
  args:
    creates: "{{ rbenv_root_path }}/versions/{{ item }}"
  loop:
    - "{{ ruby_version }}"

- name: Check default ruby
  shell: '{{ rbenv_bin }} version | grep -oE "^[^ ]+"'
  changed_when: no
  register: rbenv_current_version
  become: yes
  become_user: "{{ deploy_user }}"

- name: Set default ruby
  shell: "{{ rbenv_bin }} global {{ ruby_version }}"
  become: yes
  become_user: "{{ deploy_user }}"
  when: rbenv_current_version.stdout != ruby_version

- name: Install Bundler
  shell: "{{ rbenv_root_path }}/shims/gem install bundler"
  become: yes
  become_user: "{{ deploy_user }}"
